{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\projects\\\\randomfilm_frontend\\\\src\\\\components\\\\FilmView\\\\index.js\";\nimport React from 'react';\nimport ApiService from '../../services/FilmApiService';\nimport './FilmView.css';\n/*onButtonClick = () => {\r\n    //Работющий запрос\r\n    /*fetch(this.props.qwerry, {\r\n        method: 'GET',\r\n        mode: 'cors'})\r\n          .then(res => res.json())\r\n        .then((result) => {\r\n                this.setState({\r\n                        id: result.id,\r\n                        title: result.title,\r\n                        duration: result.duration,\r\n                        genre: result.genre,\r\n                        description: result.description,\r\n                        year: result.year,\r\n                        director: result.director,\r\n                        urlImg: result.urlImg,\r\n                        urlTrailer: result.urlTrailer,\r\n                        showed: true\r\n                });\r\n                console.log(result);\r\n                console.log(this.state);\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        )*/\n\n/*\r\nconst result = this.api.GetRandomFilm();\r\nconsole.log(result);\r\nthis.setState({\r\nid: result.id,\r\ntitle: result.title,\r\nduration: result.duration,\r\ngenre: result.genre,\r\ndescription: result.description,\r\nyear: result.year,\r\ndirector: result.director,\r\nurlImg: result.urlImg,\r\nurlTrailer: result.urlTrailer,\r\nshowed: true\r\n});\r\n}*/\n\nFilmView = ({\n  film\n}) => {\n  return React.createElement(\"div\", {\n    className: \"FilmComponent-Grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"FilmImage\",\n    src: film.urlImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    id: \"FilmTrailerLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \\u0422\\u0440\\u0435\\u0439\\u043B\\u0435\\u0440 \"), React.createElement(\"label\", {\n    id: \"FilmTrailerValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, film.urlTrailer), React.createElement(\"label\", {\n    id: \"TitleLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"label\", {\n    id: \"TitleValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, film.title), React.createElement(\"label\", {\n    id: \"GenreLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0416\\u0430\\u043D\\u0440\"), React.createElement(\"label\", {\n    id: \"GenreValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, film.genre), React.createElement(\"label\", {\n    id: \"DescriptionLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\u041E\\u043F\\u0441\\u0438\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"label\", {\n    id: \"DescriptionValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, film.description), React.createElement(\"label\", {\n    id: \"DuarationLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(\"label\", {\n    id: \"DuarationValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, film.duaration), React.createElement(\"label\", {\n    id: \"YearLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u0413\\u043E\\u0434\"), React.createElement(\"label\", {\n    id: \"YearValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, film.year), React.createElement(\"label\", {\n    id: \"DirectorLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u041F\\u0440\\u043E\\u0434\\u044E\\u0441\\u0441\\u0435\\u0440\"), React.createElement(\"label\", {\n    id: \"DirectorValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, film.director));\n};\n\nexport default FilmView;","map":{"version":3,"sources":["C:\\Users\\Anton\\projects\\randomfilm_frontend\\src\\components\\FilmView\\index.js"],"names":["React","ApiService","FilmView","film","urlImg","urlTrailer","title","genre","description","duaration","year","director"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,OAAO,gBAAP;AAEI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BW;;;;;;;;;;;;;;;;;AAiBXC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACnB,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,GAAG,EAAEA,IAAI,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFJ,EAGI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,IAAI,CAACE,UAAnC,CAHJ,EAII;AAAO,IAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAJJ,EAKI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAI,CAACG,KAA7B,CALJ,EAMI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ,EAOI;AAAO,IAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBH,IAAI,CAACI,KAA7B,CAPJ,EAQI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDARJ,EASI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BJ,IAAI,CAACK,WAAnC,CATJ,EAUI;AAAO,IAAA,EAAE,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAVJ,EAWI;AAAO,IAAA,EAAE,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,IAAI,CAACM,SAAjC,CAXJ,EAYI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZJ,EAaI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,IAAI,CAACO,IAA5B,CAbJ,EAcI;AAAO,IAAA,EAAE,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAdJ,EAeI;AAAO,IAAA,EAAE,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,IAAI,CAACQ,QAAhC,CAfJ,CADJ;AAmBH,CApBD;;AAsBA,eAAgBT,QAAhB","sourcesContent":["import React from 'react';\r\nimport ApiService from '../../services/FilmApiService';\r\n\r\nimport './FilmView.css';\r\n\r\n    /*onButtonClick = () => {\r\n        //Работющий запрос\r\n        /*fetch(this.props.qwerry, {\r\n            method: 'GET',\r\n            mode: 'cors'})\r\n\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                    this.setState({\r\n                            id: result.id,\r\n                            title: result.title,\r\n                            duration: result.duration,\r\n                            genre: result.genre,\r\n                            description: result.description,\r\n                            year: result.year,\r\n                            director: result.director,\r\n                            urlImg: result.urlImg,\r\n                            urlTrailer: result.urlTrailer,\r\n                            showed: true\r\n                    });\r\n                    console.log(result);\r\n                    console.log(this.state);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )*//*\r\n        const result = this.api.GetRandomFilm();\r\n        console.log(result);\r\n        this.setState({\r\n            id: result.id,\r\n            title: result.title,\r\n            duration: result.duration,\r\n            genre: result.genre,\r\n            description: result.description,\r\n            year: result.year,\r\n            director: result.director,\r\n            urlImg: result.urlImg,\r\n            urlTrailer: result.urlTrailer,\r\n            showed: true\r\n        });\r\n    }*/\r\n\r\n    FilmView = ({film}) => {\r\n        return (\r\n            <div className=\"FilmComponent-Grid\">\r\n                <img id=\"FilmImage\" src={film.urlImg}/>\r\n                <label id=\"FilmTrailerLabel\" > Трейлер </label>\r\n                <label id=\"FilmTrailerValue\">{film.urlTrailer}</label>\r\n                <label id=\"TitleLabel\">Название</label>\r\n                <label id=\"TitleValue\">{film.title}</label>\r\n                <label id=\"GenreLabel\">Жанр</label>\r\n                <label id=\"GenreValue\">{film.genre}</label>\r\n                <label id=\"DescriptionLabel\">Опсиание</label>\r\n                <label id=\"DescriptionValue\">{film.description}</label>\r\n                <label id=\"DuarationLabel\">Длительность</label>\r\n                <label id=\"DuarationValue\">{film.duaration}</label>\r\n                <label id=\"YearLabel\">Год</label>\r\n                <label id=\"YearValue\">{film.year}</label>\r\n                <label id=\"DirectorLabel\">Продюссер</label>\r\n                <label id=\"DirectorValue\">{film.director}</label>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    export  default FilmView;"]},"metadata":{},"sourceType":"module"}